var express = require('express');
var router = express.Router();

// Get Homepage
var html = "<!DOCTYPE html>\n <html>\n    <head>\n    </head>\n   <body>\n      <h1>For D3 Nodes API:</h1>\n	<p>\n use /api/terms/nodes/name.</p>\n <h1>For D3 Links API:</h1>\n <p>use /api/docs/name.</p>\n	<h1>For user profile APIs:</h1>\n	<h2>For user signup</h2>\n <p>post name, email, and password to /user/signup.</p>\n	 <h2>For user signin</h2>\n	 <p>post email and password to /user/authenticate, then use the token and userid created for authorization to other routes.</p>\n	<h2>For user profile</h2>\n <p>post userid to /user/profile.</p>\n <h2>For user email change</h2>\n <p>post email, newEmail, and password to /user/update-email.</p>\n <h2>For user password change</h2>\n <p>post email, oldPassword, newPassword, and newPassword2 to /user/update-password.</p>\n <h1>For user watchlist APIs:</h1>\n 	<h2>Create new watchlists:</h2>\n  <p>Required fields: userid, basketname and item. Route type: post. Route: /user/save-basket</p>\n  <h2>Retrieve all watchlist and watchlistids</h2>\n <p>Required field: userid. Route type: post. Route: /user/get-baskets/</p>\n <h2>Retrieve one watchlist</h2>\n <p>Required field: basketid. Route type: post. Route: /user/get-basket/</p>\n <h2>Update one watchlist</h2>\n <p>Required fields: userid, basketid, basketname and item (separated by commas for multiple items). Route type: put. Route: /user/update-basket/</p>\n <h2>Deactivate one watchlist</h2>\n <p>Required field: basketid. Route type: post. Route: /user/delete-basket/</p>\n <h2>Restate one watchlist</h2>\n <p>Required field: basketid. Route type: post. Route: /user/restate-basket/.</p>\n <h2>Retrieve returns for one watchlist</h2>\n <p>Route type: get. Route: /user/watchlist-returns/basketid.</p>\n <h1>For logging search term:</h1>\n <p>post term and userid fields (or null if user is not logged in) to /api/search-term/.</p>\n <h1>For rendering top search terms:</h1>\n <p>Top terms in trailing one month: get route /api/search-count-1m/. Top terms in trailing one quarter: get route /api/search-count-1q/. Top concepts in trailing one quarter: get route /api/concept-count-1q/.</p>\n <h2>Search history by User</h2>\n <p>Fields required: userid. Route type: put. Route /api/user-search/</p>\n <h1>For daily top gainers and losers</h1>\n <p>Top gainers: get route /api/top-gainers/. Top losers: get route /api/top-losers/.</p>\n <h1>Ecosystems APIs</h1>\n 	<h2>For logging user votes on doc relationships</h2>\n 	<p>Fields required: source and target terms, userid and comment. Route type: put. Upvote routes: /api/upvote-Competitor/, /api/upvote-Supplier/, /api/upvote-Client/, /api/upvote-Sister/, /api/upvote-Subsidiary/, /api/upvote-Parent/. Downvote routes: change upvote to downvote in URI, eg. /api/downvote-Competitor/.</p>\n <h2>To retrieve net vote counts for source only</h2>\n <p>use get route /api/doc-traffic/source.</p>\n <h2>To retrieve net vote counts for one source-target relationship</h2>\n <p>use get route /api/doc-traffic/source/target.</p>\n <h2>To get news flow about source and target companies by date and relevance</h2>\n <p>Get routes /api/news/date/source/target and /api/news/relevance/source/target.</p>\n <h1>Company Product APIs</h1>\n <h2>Featured Products</h2>\n <p>get route /api/featured-products</p>\n <h2>Products by Company</h2>\n <p>get route /api/products/companyname</p>\n <h2>Upvote product by Company</h2>\n <p>Fields required: companyName, userid, productName and productCategory. Route type: post. Route /api/product-upvote/</p>\n <h2>Top upvoted products:</h2>\n <p>Top products upvoted in trailing one month: get route /api/product-count-1m/. Top products upvoted in trailing one quarter: get route /api/product-count-1q/.</p>\n <h2>Product upvote history by Company</h2>\n <p>Fields required: companyName. Route type: put. Route /api/company-products/</p>\n <h2>Product upvote history by User</h2>\n <p>Fields required: userid. Route type: put. Route /api/user-products/</p>\n <h1>Price Tracker APIs</h1>\n <h2>2 year historical prices and dates</h2>\n <p>get route /api/prices/name</p>\n <h2>Live price quote</h2>\n <p>get route /api/quote/name</p>\n <h2>Daily quote download</h2>\n <p>to start: get route /api/save-prices, to end: change to savePrice.stop() in Nodejs;</p>\n <h2>8 year historical annual income statment metrics, margins, growth and dates</h2>\n <p>get /api/revenue/name, get /api/gross-profit/name, get /api/operating-profit/name, get /api/net-income/name, get /api/eps-diluted/name, get /api/book-value-per-share/name, get /api/dividend-per-share/name</p>\n <h1>Other APIs:</h1>\n <p>/api/docs, /api/terms, /api/terms/name, /api/terms/nodes, and /api/relationships.</p>\n   </body>\n</html>";

router.get('/', function(req, res){
	  res.send(html);
});

module.exports = router;
